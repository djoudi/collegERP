<?php

/**
 * Baseschool_year_term
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $term_id
 * @property integer $school_year_id
 * @property term $term
 * @property school_year $school_year
 * 
 * @method integer          getTermId()         Returns the current record's "term_id" value
 * @method integer          getSchoolYearId()   Returns the current record's "school_year_id" value
 * @method term             getTerm()           Returns the current record's "term" value
 * @method school_year      getSchoolYear()     Returns the current record's "school_year" value
 * @method school_year_term setTermId()         Sets the current record's "term_id" value
 * @method school_year_term setSchoolYearId()   Sets the current record's "school_year_id" value
 * @method school_year_term setTerm()           Sets the current record's "term" value
 * @method school_year_term setSchoolYear()     Sets the current record's "school_year" value
 * 
 * @package    ubeo
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseschool_year_term extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('school_year_term');
        $this->hasColumn('term_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('school_year_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('term', array(
             'local' => 'term_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('school_year', array(
             'local' => 'school_year_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}