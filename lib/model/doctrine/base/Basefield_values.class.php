<?php

/**
 * Basefield_values
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $value
 * @property integer $field_id
 * @property integer $fielvaluedorder
 * @property fields $fields
 * 
 * @method string       getValue()           Returns the current record's "value" value
 * @method integer      getFieldId()         Returns the current record's "field_id" value
 * @method integer      getFielvaluedorder() Returns the current record's "fielvaluedorder" value
 * @method fields       getFields()          Returns the current record's "fields" value
 * @method field_values setValue()           Sets the current record's "value" value
 * @method field_values setFieldId()         Sets the current record's "field_id" value
 * @method field_values setFielvaluedorder() Sets the current record's "fielvaluedorder" value
 * @method field_values setFields()          Sets the current record's "fields" value
 * 
 * @package    ubeo
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basefield_values extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('field_values');
        $this->hasColumn('value', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('field_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('fielvaluedorder', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('fields', array(
             'local' => 'field_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}