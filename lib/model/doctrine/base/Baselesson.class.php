<?php

/**
 * Baselesson
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $lesson_code
 * @property integer $prev_lesson
 * @property lesson $lesson
 * @property Doctrine_Collection $lesson_fields
 * 
 * @method string              getLessonCode()    Returns the current record's "lesson_code" value
 * @method integer             getPrevLesson()    Returns the current record's "prev_lesson" value
 * @method lesson              getLesson()        Returns the current record's "lesson" value
 * @method Doctrine_Collection getLessonFields()  Returns the current record's "lesson_fields" collection
 * @method lesson              setLessonCode()    Sets the current record's "lesson_code" value
 * @method lesson              setPrevLesson()    Sets the current record's "prev_lesson" value
 * @method lesson              setLesson()        Sets the current record's "lesson" value
 * @method lesson              setLessonFields()  Sets the current record's "lesson_fields" collection
 * 
 * @package    ubeo
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baselesson extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lesson');
        $this->hasColumn('lesson_code', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('prev_lesson', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('lesson', array(
             'local' => 'prev_lesson',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('lesson_fields', array(
             'local' => 'id',
             'foreign' => 'lesson_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}